apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: gitlab
  namespace: gitlab
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: gitlab
        app: gitlab
    spec:
      containers:
      - name: gitlab
        image: gitlab/gitlab-ce:8.15.4-ce.1
        imagePullPolicy: IfNotPresent
        command: ["/bin/bash", "-c",
          "sed -i \"s/environment ({'GITLAB_ROOT_PASSWORD' => initial_root_password }) if initial_root_password/environment ({'GITLAB_ROOT_PASSWORD' => initial_root_password, 'GITLAB_SHARED_RUNNERS_REGISTRATION_TOKEN' => node['gitlab']['gitlab-rails']['initial_shared_runners_registration_token'] })/g\" /opt/gitlab/embedded/cookbooks/gitlab/recipes/database_migrations.rb; exec /assets/wrapper"]
        env:
        - name: GITLAB_EXTERNAL_SCHEME
          configMapRef:
            name: gitlab-config
            key: external_scheme
        - name: GITLAB_EXTERNAL_HOSTNAME
          configMapRef:
            name: gitlab-config
            key: external_hostname
        - name: GITLAB_REGISTRY_EXTERNAL_SCHEME
          configMapRef:
            name: gitlab-config
            key: registry_external_scheme
        - name: GITLAB_REGISTRY_EXTERNAL_HOSTNAME
          configMapRef:
            name: gitlab-config
            key: registry_external_hostname
        - name: POSTGRES_USER
          configMapRef:
            name: gitlab-config
            key: postgres_user
        - name: POSTGRES_PASSWORD
          secretMapRef:
            name: gitlab-config
            key: postgres_password
        - name: POSTGRES_DB
          configMapRef:
            name: gitlab-config
            key: postgres_db
        - name: GITLAB_INITIAL_SHARED_RUNNERS_REGISTRATION_TOKEN
          secretMapRef:
            name: gitlab-secrets
            key: initial_shared_runners_registration_token
        - name: GITLAB_OMNIBUS_CONFIG
          value: |
            external_url "#{ENV['GITLAB_EXTERNAL_SCHEME']}://#{ENV['GITLAB_EXTERNAL_HOSTNAME']}"
            registry_external_url "#{ENV['GITLAB_REGISTRY_EXTERNAL_SCHEME']}://#{ENV['GITLAB_REGISTRY_EXTERNAL_HOSTNAME']}"

            gitlab_rails['initial_shared_runners_registration_token'] = ENV['GITLAB_INITIAL_SHARED_RUNNERS_REGISTRATION_TOKEN']

            postgresql['enable'] = false
            gitlab_rails['db_host'] = 'gitlab-postgresql'
            gitlab_rails['db_password'] = ENV['POSTGRES_PASSWORD']
            gitlab_rails['db_username'] = ENV['POSTGRES_USER']
            gitlab_rails['db_database'] = ENV['POSTGRES_DB']

            redis['enable'] = false
            gitlab_rails['redis_host'] = 'gitlab-redis'

            manage_accounts['enable'] = true
            manage_storage_directories['manage_etc'] = false

            gitlab_shell['auth_file'] = '/gitlab-data/authorized_keys'
            git_data_dir '/gitlab-data/git-data'
            gitlab_rails['shared_path'] = '/gitlab-data/shared'
            gitlab_rails['uploads_directory'] = '/gitlab-data/uploads'
            gitlab_ci['builds_directory'] = '/gitlab-data/builds'
        ports:
        - name: https
          containerPort: 443
        - name: http
          containerPort: 80
        - name: ssh
          containerPort: 22
        volumeMounts:
        - name: config
          mountPath: /etc/gitlab
        - name: data
          mountPath: /gitlab-data
        livenessProbe:
          httpGet:
            path: /help
            port: 80
          initialDelaySeconds: 180
          timeoutSeconds: 15
        readinessProbe:
          httpGet:
            path: /help
            port: 80
          initialDelaySeconds: 15
          timeoutSeconds: 1
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: gitlab-rails-storage
      - name: config
        persistentVolumeClaim:
          claimName: gitlab-config-storage
